# Autogenerated by nbdev

d = { 'settings': { 'branch': 'released',
                'doc_baseurl': '/mhar',
                'doc_host': 'https://uumami.github.io/',
                'git_url': 'https://github.com/sonder-art/mhar',
                'lib_path': 'mhar'},
  'syms': { 'mhar.core': {},
            'mhar.inner_point': {'mhar.inner_point.ChebyshevCenter': ('inner_point.html#chebyshevcenter', 'mhar/inner_point.py')},
            'mhar.polytope': { 'mhar.polytope.NFDPolytope': ('polytope.html#nfdpolytope', 'mhar/polytope.py'),
                               'mhar.polytope.NFDPolytope.__init__': ('polytope.html#nfdpolytope.__init__', 'mhar/polytope.py'),
                               'mhar.polytope.NFDPolytope.__repr__': ('polytope.html#nfdpolytope.__repr__', 'mhar/polytope.py'),
                               'mhar.polytope.NFDPolytope.__str__': ('polytope.html#nfdpolytope.__str__', 'mhar/polytope.py'),
                               'mhar.polytope.NFDPolytope._check_inter_constraint_dimensions_': ( 'polytope.html#nfdpolytope._check_inter_constraint_dimensions_',
                                                                                                  'mhar/polytope.py'),
                               'mhar.polytope.NFDPolytope.cast_precision': ('polytope.html#nfdpolytope.cast_precision', 'mhar/polytope.py'),
                               'mhar.polytope.NFDPolytope.compute_projection_matrix': ( 'polytope.html#nfdpolytope.compute_projection_matrix',
                                                                                        'mhar/polytope.py'),
                               'mhar.polytope.NFDPolytope.project_h': ('polytope.html#nfdpolytope.project_h', 'mhar/polytope.py'),
                               'mhar.polytope.NFDPolytope.send_to_device': ('polytope.html#nfdpolytope.send_to_device', 'mhar/polytope.py'),
                               'mhar.polytope.Polytope': ('polytope.html#polytope', 'mhar/polytope.py'),
                               'mhar.polytope.Polytope.__init__': ('polytope.html#polytope.__init__', 'mhar/polytope.py'),
                               'mhar.polytope.Polytope.__repr__': ('polytope.html#polytope.__repr__', 'mhar/polytope.py'),
                               'mhar.polytope.Polytope.__str__': ('polytope.html#polytope.__str__', 'mhar/polytope.py'),
                               'mhar.polytope.Polytope._assert_valid_device_': ( 'polytope.html#polytope._assert_valid_device_',
                                                                                 'mhar/polytope.py'),
                               'mhar.polytope.Polytope._check_dtype_': ('polytope.html#polytope._check_dtype_', 'mhar/polytope.py'),
                               'mhar.polytope.Polytope._check_intra_constraint_dimensions_': ( 'polytope.html#polytope._check_intra_constraint_dimensions_',
                                                                                               'mhar/polytope.py'),
                               'mhar.polytope.Polytope._process_tensor_or_array_': ( 'polytope.html#polytope._process_tensor_or_array_',
                                                                                     'mhar/polytope.py'),
                               'mhar.polytope.Polytope.cast_precision': ('polytope.html#polytope.cast_precision', 'mhar/polytope.py'),
                               'mhar.polytope.Polytope.send_to_device': ('polytope.html#polytope.send_to_device', 'mhar/polytope.py')},
            'mhar.polytope_examples': { 'mhar.polytope_examples.Hypercube': ( 'polytope_examples.html#hypercube',
                                                                              'mhar/polytope_examples.py'),
                                        'mhar.polytope_examples.Hypercube.__init__': ( 'polytope_examples.html#hypercube.__init__',
                                                                                       'mhar/polytope_examples.py'),
                                        'mhar.polytope_examples.Simplex': ('polytope_examples.html#simplex', 'mhar/polytope_examples.py'),
                                        'mhar.polytope_examples.Simplex.__init__': ( 'polytope_examples.html#simplex.__init__',
                                                                                     'mhar/polytope_examples.py')},
            'mhar.utils': {'mhar.utils.print_progress': ('b_utils.html#print_progress', 'mhar/utils.py')},
            'mhar.walk': { 'mhar.walk.check_numerical_stability': ('walk.html#check_numerical_stability', 'mhar/walk.py'),
                           'mhar.walk.create_h': ('walk.html#create_h', 'mhar/walk.py'),
                           'mhar.walk.draw_uniform': ('walk.html#draw_uniform', 'mhar/walk.py'),
                           'mhar.walk.sample_inner_points': ('walk.html#sample_inner_points', 'mhar/walk.py'),
                           'mhar.walk.update_progress_bars': ('walk.html#update_progress_bars', 'mhar/walk.py'),
                           'mhar.walk.walk': ('walk.html#walk', 'mhar/walk.py')},
            'mhar.warningss': { 'mhar.warningss.custom_warning': ('a_warnings.html#custom_warning', 'mhar/warningss.py'),
                                'mhar.warningss.custom_warning_format': ('a_warnings.html#custom_warning_format', 'mhar/warningss.py')}}}
